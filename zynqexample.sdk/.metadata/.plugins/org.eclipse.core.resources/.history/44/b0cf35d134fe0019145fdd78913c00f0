/*
 * memtest_controller.c
 *
 *  Created on: Nov 3, 2019
 *      Author: Dickbutt
 */


extern char memtest_cfg_printVerbose = TRUE;
extern unsigned int memtest_cfg_wordCount = 128;
extern unsigned int memtest_cfg_stopAddress = MEMORY_BASE_ADDRESS + sizeof(unsigned int)*memtest_cfg_wordCount;


void metest_setWordCount(unsigned int wordCount)
{
	memtest_cfg_wordCount = wordCount;
	memtest_cfg_stopAddress = MEMORY_BASE_ADDRESS + sizeof(unsigned int)*memtest_cfg_wordCount;
}

void memtest_writeRegister(unsigned int address, unsigned int value)
{
	*((volatile unsigned int*)address) = value;
}
unsigned int memtest_readRegister(unsigned int address)
{
	return *((volatile unsigned int*)address);
}

unsigned int getNextPattern(unsigned int counter, enum MemTestModes mode)
{
	switch(mode)
	{
		case MTESTMODE_DEADBEEF:
			return 0xDEADBEEF;
		break;
		case MTESTMODE_WALKINGONE:
			return 1UL << (counter%32);
		break;
		default:
		break;
	}
}

void memtest_performTest(unsigned int wordCount, enum MemTestModes mode)
{
	for(unsigned int counter = 0; counter < wordCount; counter++)
	{
		unsigned int currentAddress =  MEMORY_BASE_ADDRESS + sizeof(unsigned int)*counter;
		unsigned int pattern = getNextPattern(counter, mode);
		memtest_writeRegister(currentAdress, pattern);
	}
	unsigned int errorCount = 0;
	for(unsigned int counter = 0; counter < wordCount; counter++)
	{
		unsigned int currentAddress =  MEMORY_BASE_ADDRESS + sizeof(unsigned int)*counter;
		unsigned int pattern = getNextPattern(counter, mode);
		memtest_writeRegister(currentAdress, pattern);
	}
}
